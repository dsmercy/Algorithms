name: CI/CD

on:
  push:
    branches:
      - master

env:
  APPLICATION_NAME: algorithms
  IMAGE: dsmercy/algorithms
  TAG: 1.0.${{ github.run_number }}
  DOCKERFILE_PATH: ""
  NAMESPACE: development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install .NET 6 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Check directories
        run: |
          echo "Listing files in the root directory:"
          ls ./

      - name: Build the solution
        run: |
          echo "Building the solution..."
          dotnet build Algorithms.sln --configuration Debug

      - name: Install SonarQube Scanner
        run: |
          echo "Installing SonarQube Scanner..."
          dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Running SonarQube analysis..."
          dotnet sonarscanner begin /k:"${{ env.APPLICATION_NAME }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          dotnet build Algorithms.sln --configuration Debug
          dotnet test Algorithms.Tests/Algorithms.Tests.csproj --configuration Debug --no-restore --verbosity normal --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./TestResults/
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  run-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install .NET 6 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore NuGet packages
        run: |
          echo "Restoring NuGet packages..."
          dotnet restore Algorithms.sln

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          dotnet test Algorithms.Tests/Algorithms.Tests.csproj --configuration Debug --no-restore --verbosity normal

      - name: Stop workflow if tests fail
        if: failure()
        run: |
          echo "Unit tests failed. Stopping workflow."
          exit 1

  push-docker-image:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Algorithms/
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}
